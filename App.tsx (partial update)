// Handle name setup completion
const handleNameComplete = async (name: string) => {
  console.log('Name setup complete with name:', name);
  setUserName(name);
  setAppState('onboarding-intro');
};

// Handle name setup skip
const handleNameSkip = async () => {
  console.log('Name setup skipped');
  // Get user email to extract name if available
  try {
    const user = await getCurrentUser();
    if (user?.email) {
      const emailName = user.email.split('@')[0];
      setUserName(emailName);
      await AsyncStorage.setItem('user_display_name', emailName);
      console.log('Using email-based name:', emailName);
    } else {
      setUserName('Friend');
      await AsyncStorage.setItem('user_display_name', 'Friend');
      console.log('Using default name: Friend');
    }
  } catch (error) {
    console.error('Error getting default name:', error);
    setUserName('Friend');
    try {
      await AsyncStorage.setItem('user_display_name', 'Friend');
    } catch (e) {
      console.error('Error saving default name:', e);
    }
  }
  setAppState('onboarding-intro');
};